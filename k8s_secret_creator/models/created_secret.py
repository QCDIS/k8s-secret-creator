# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from k8s_secret_creator.models.base_model_ import Model
from k8s_secret_creator import util


class CreatedSecret(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, secret_name: str=None):  # noqa: E501
        """CreatedSecret - a model defined in Swagger

        :param secret_name: The secret_name of this CreatedSecret.  # noqa: E501
        :type secret_name: str
        """
        self.swagger_types = {
            'secret_name': str
        }

        self.attribute_map = {
            'secret_name': 'secretName'
        }
        self._secret_name = secret_name

    @classmethod
    def from_dict(cls, dikt) -> 'CreatedSecret':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreatedSecret of this CreatedSecret.  # noqa: E501
        :rtype: CreatedSecret
        """
        return util.deserialize_model(dikt, cls)

    @property
    def secret_name(self) -> str:
        """Gets the secret_name of this CreatedSecret.


        :return: The secret_name of this CreatedSecret.
        :rtype: str
        """
        return self._secret_name

    @secret_name.setter
    def secret_name(self, secret_name: str):
        """Sets the secret_name of this CreatedSecret.


        :param secret_name: The secret_name of this CreatedSecret.
        :type secret_name: str
        """
        if secret_name is None:
            raise ValueError("Invalid value for `secret_name`, must not be `None`")  # noqa: E501

        self._secret_name = secret_name

    def to_dict(self) -> dict:
        return {'secretName': self.secret_name}
